{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload; //if item already exist in the cart\n\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          //mapping through old array and setting to new array\n          //check if current item is equal to existing item \n          // if true set to new item\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { // add new item\n          ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/trez/Desktop/SEIFX818/Unit4/shopping-app/frontend/src/redux/reducers/cartReducers.js"],"names":["actionTypes","cartReducer","state","cartItems","action","type","ADD_TO_CART","item","payload","existItem","find","x","product","map","REMOVE_FROM_CART","filter"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,WAAW,CAACM,WAAjB;AACI,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB,CADJ,CAGI;;AACA,YAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACX,eAAO,EACH,GAAGP,KADA;AAEH;AACA;AACA;AACAC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAqBF,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAAnE;AALR,SAAP;AAOH,OARD,MAQO;AACH,eAAO,EACH;AACA,aAAGT,KAFA;AAGHC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAHR,SAAP;AAKH;;AACL,SAAKP,WAAW,CAACc,gBAAjB;AACI,aAAO,EACH,GAAGZ,KADA;AAEHC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBY,MAAhB,CAAwBJ,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAcR,MAAM,CAACI,OAAlD;AAFR,OAAP;;AAIJ;AACI,aAAON,KAAP;AA5BR;AA8BH,CA/BM","sourcesContent":["import * as actionTypes from '../constants/cartConstants';\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_TO_CART:\n            const item = action.payload;\n\n            //if item already exist in the cart\n            const existItem = state.cartItems.find((x) => x.product === item.product);\n\n            if (existItem) {\n                return {\n                    ...state,\n                    //mapping through old array and setting to new array\n                    //check if current item is equal to existing item \n                    // if true set to new item\n                    cartItems: state.cartItems.map((x)=> x.product === existItem.product ? item : x)\n                }\n            } else {\n                return {\n                    // add new item\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case actionTypes.REMOVE_FROM_CART:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter((x)=> x.product !== action.payload)\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}