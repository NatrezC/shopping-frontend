{"ast":null,"code":"// An action is a plain JavaScript object that has a type field.You can think of an action as an event that describes something that happened in the application.\n//make http request to backend and add it to cart\nimport * as actionTypes from '../constants/cartConstants';\nimport axios from 'axios';\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  //getState is apart of redux thunk\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: actionTypes.ADD_TO_CART,\n    payload: {\n      product: data._id,\n      name: data.name,\n      imageUrl: data.imageUrl,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  }); //set item to local storage\n\n  localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n}; //remove item from cart with id\n\nexport const removeFromCart = () => (dispatch, getState) => {\n  dispatch({\n    type: actionTypes.REMOVE_FROM_CART,\n    payload: id\n  }); //update localstorage...update cart\n\n  localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n};","map":{"version":3,"sources":["/home/trez/Desktop/SEIFX818/Unit4/shopping-app/frontend/src/redux/actions/cartActions.js"],"names":["actionTypes","axios","addToCart","id","qty","dispatch","getState","data","get","type","ADD_TO_CART","payload","product","_id","name","imageUrl","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","REMOVE_FROM_CART"],"mappings":"AAAA;AAEA;AAEA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAE;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMN,KAAK,CAACO,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAAvB;AAEAE,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAET,WAAW,CAACU,WADb;AAELC,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAEL,IAAI,CAACM,GADT;AAELC,MAAAA,IAAI,EAAEP,IAAI,CAACO,IAFN;AAGLC,MAAAA,QAAQ,EAAER,IAAI,CAACQ,QAHV;AAILC,MAAAA,KAAK,EAAET,IAAI,CAACS,KAJP;AAKLC,MAAAA,YAAY,EAAEV,IAAI,CAACU,YALd;AAMLb,MAAAA;AANK;AAFJ,GAAD,CAAR,CAHgE,CAehE;;AACAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAA7B;AACH,CAjBM,C,CAmBP;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM,CAACnB,QAAD,EAAWC,QAAX,KAAwB;AACxDD,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAET,WAAW,CAACyB,gBADb;AAELd,IAAAA,OAAO,EAAER;AAFJ,GAAD,CAAR,CADwD,CAMxD;;AACAe,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBC,SAA/B,CAA7B;AACH,CARM","sourcesContent":["// An action is a plain JavaScript object that has a type field.You can think of an action as an event that describes something that happened in the application.\n\n//make http request to backend and add it to cart\n\nimport * as actionTypes from '../constants/cartConstants';\nimport axios from 'axios';\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => { //getState is apart of redux thunk\n    const { data } = await axios.get(`/api/products/${id}`)\n    \n    dispatch({\n        type: actionTypes.ADD_TO_CART,\n        payload: {\n            product: data._id,\n            name: data.name,\n            imageUrl: data.imageUrl,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n\n    //set item to local storage\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\n}\n\n//remove item from cart with id\nexport const removeFromCart = () => (dispatch, getState) => {\n    dispatch({\n        type: actionTypes.REMOVE_FROM_CART,\n        payload: id\n    })\n\n    //update localstorage...update cart\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems))\n}"]},"metadata":{},"sourceType":"module"}