{"ast":null,"code":"import * as actionTypes from \"../constants/productConstants\";\nimport axios from \"axios\";\nexport const getProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/products\"); //go through the data and return the following\n\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log('the error is', error);\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_REQUEST\n    }); //make a request to specific \n\n    const {\n      data\n    } = await axios.get(`/products/${id}`);\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const removeProductDetails = () => dispatch => {\n  dispatch({\n    type: actionTypes.GET_PRODUCT_DETAILS_RESET\n  });\n};","map":{"version":3,"sources":["/home/trez/Desktop/SEIFX818/Unit4/shopping-app/frontend/src/redux/actions/productActions.js"],"names":["actionTypes","axios","getProducts","dispatch","type","GET_PRODUCTS_REQUEST","data","get","GET_PRODUCTS_SUCCESS","payload","error","console","log","GET_PRODUCTS_FAIL","response","message","getProductDetails","id","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","removeProductDetails","GET_PRODUCT_DETAILS_RESET"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,+BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AAEAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,WAAW,CAACK;AAApB,KAAD,CAAR;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAU,WAAV,CAAvB,CAJA,CAKA;;AACAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,WAAW,CAACQ,oBADb;AAELC,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAVD,CAUE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA6BF,KAA7B;AACAP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,WAAW,CAACa,iBADb;AAELJ,MAAAA,OAAO,EACHC,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACI,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACML,KAAK,CAACI,QAAN,CAAeR,IAAf,CAAoBS,OAD1B,GAEML,KAAK,CAACK;AALX,KAAD,CAAR;AAOH;AACJ,CArBM;AAuBP,OAAO,MAAMC,iBAAiB,GAAIC,EAAD,IAAQ,MAAOd,QAAP,IAAoB;AACzD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,WAAW,CAACkB;AAApB,KAAD,CAAR,CADA,CAEA;;AACA,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAW,aAAYU,EAAG,EAA1B,CAAvB;AAEAd,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,WAAW,CAACmB,2BADb;AAELV,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GATD,CASE,OAAOI,KAAP,EAAc;AACZP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,WAAW,CAACoB,wBADb;AAELX,MAAAA,OAAO,EACHC,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACI,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACML,KAAK,CAACI,QAAN,CAAeR,IAAf,CAAoBS,OAD1B,GAEML,KAAK,CAACK;AALX,KAAD,CAAR;AAOH;AACJ,CAnBM;AAqBP,OAAO,MAAMM,oBAAoB,GAAG,MAAOlB,QAAD,IAAc;AACpDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ,WAAW,CAACsB;AAApB,GAAD,CAAR;AACH,CAFM","sourcesContent":["import * as actionTypes from \"../constants/productConstants\";\nimport axios from \"axios\";\n\nexport const getProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\n\n        const { data } = await axios.get(\"/products\");\n        //go through the data and return the following\n        dispatch({\n            type: actionTypes.GET_PRODUCTS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        console.log('the error is' , error)\n        dispatch({\n            type: actionTypes.GET_PRODUCTS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        });\n    }\n};\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\n        //make a request to specific \n        const { data } = await axios.get(`/products/${id}`);\n\n        dispatch({\n            type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const removeProductDetails = () => (dispatch) => {\n    dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_RESET });\n};"]},"metadata":{},"sourceType":"module"}