{"ast":null,"code":"var _jsxFileName = \"/home/trez/Desktop/SEIFX818/Unit4/shopping-app/frontend/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from 'validator';\nimport './SignUp.css'; //Components\n\nimport FormGroup from './common/FormGroup';\nimport ButtonSpinner from './common/ButtonSpinner'; //Helper\n\nimport { register } from '../services/auth.service';\nimport { resMessage } from '../utilities/functions.utilities'; // Function given to react-validator\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n}; //validates email\n\n\nconst vUsername = value => {\n  if (value.length < 3 || value.length >= 20) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The username must be between 3 and 20 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n}; //validates Password\n\n\nconst vPassword = value => {\n  if (value.length < 6 || value.length >= 20) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"Your password must be between 6 and 40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n}; //validates Email ======> isEmail is a library that is used to validate emails\n\n\nconst vEmail = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"Your email is not valid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n};\n\nconst SignUp = props => {\n  _s();\n\n  const form = useRef();\n  const checkBtn = useRef();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\"); // Stores the username in our username state\n\n  const onChangeUsername = e => {\n    const username = e.target.value;\n    setUsername(username);\n  }; //Stores the email in the email state\n\n\n  const onChangeEmail = e => {\n    const email = e.target.value;\n    setEmail(email);\n  }; // Stores the password in our password state\n\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = e => {\n    e.preventDefault(); //Prevent message clear them out\n\n    setMessage(\"\");\n    setSuccessful(false); // Validates all the fields (username, email, and password)\n\n    form.current.validateAll(); // Validator stores errors and we can check if error exist\n\n    console.log(checkBtn.current);\n\n    if (checkBtn.current.context._errors.length === 0) {\n      register(username, email, password).then(response => {\n        setMessage(response.data.message);\n        setSuccessful(true);\n        setTimeout(() => {\n          props.history.push('/login');\n        }, 3000);\n      }, error => {\n        setMessage(resMessage(error));\n        setSuccessful(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n        alt: \"profile-img\",\n        className: \"profile-img-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleLogin,\n        ref: form,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          text: \"username\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"username\",\n            value: username,\n            onChange: onChangeUsername,\n            validations: [required, vUsername] //tells if the username is right with more than 3 and less than 20\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          text: \"email\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"email\",\n            value: email,\n            onChange: onChangeEmail,\n            validations: [required, vEmail] //validates email\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          text: \"password\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            value: password,\n            onChange: onChangePassword,\n            validations: [required, vPassword] // password has to be longer than 6 and less than 40 characters\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonSpinner, {\n          text: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n          style: {\n            display: \"none\"\n          },\n          ref: checkBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"QDTZJI83i8s07SThg+zrek9n7LI=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/trez/Desktop/SEIFX818/Unit4/shopping-app/frontend/src/components/SignUp.js"],"names":["React","useState","useRef","Form","Input","CheckButton","isEmail","FormGroup","ButtonSpinner","register","resMessage","required","value","vUsername","length","vPassword","vEmail","SignUp","props","form","checkBtn","username","setUsername","email","setEmail","password","setPassword","successful","setSuccessful","message","setMessage","onChangeUsername","e","target","onChangeEmail","onChangePassword","handleLogin","preventDefault","current","validateAll","console","log","context","_errors","then","response","data","setTimeout","history","push","error","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from 'validator';\nimport './SignUp.css'\n\n//Components\nimport FormGroup from './common/FormGroup'\nimport ButtonSpinner from './common/ButtonSpinner'\n\n//Helper\nimport { register } from '../services/auth.service'\nimport { resMessage } from '../utilities/functions.utilities'\n\n// Function given to react-validator\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\n//validates email\nconst vUsername = (value) => {\n    if (value.length < 3 || value.length >= 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The username must be between 3 and 20 characters.\n            </div>\n        )\n    }\n}\n\n//validates Password\nconst vPassword = (value) => {\n    if (value.length < 6 || value.length >= 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your password must be between 6 and 40\n            </div>\n        )\n    }\n}\n\n//validates Email ======> isEmail is a library that is used to validate emails\nconst vEmail = (value) => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your email is not valid\n            </div>\n        )\n    }\n}\n\nconst SignUp = (props) => {\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [successful, setSuccessful] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    // Stores the username in our username state\n    const onChangeUsername = (e) => {\n        const username = e.target.value;\n        setUsername(username);\n    };\n    //Stores the email in the email state\n    const onChangeEmail = (e) => {\n        const email = e.target.value;\n        setEmail(email);\n    };\n    // Stores the password in our password state\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    };\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        //Prevent message clear them out\n        setMessage(\"\")\n        setSuccessful(false)\n\n        // Validates all the fields (username, email, and password)\n        form.current.validateAll();\n\n        // Validator stores errors and we can check if error exist\n        console.log(checkBtn.current)\n        if (checkBtn.current.context._errors.length === 0) {\n            register(username, email, password).then(\n                (response) => {\n                    setMessage(response.data.message)\n                    setSuccessful(true)\n                    setTimeout(() => {\n                        props.history.push('/login')\n                    }, 3000)\n                },\n                (error) => {\n                    setMessage(resMessage(error))\n                    setSuccessful(false)\n                }\n            )\n        }\n    };\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n\n                <Form onSubmit={handleLogin} ref={form}>\n                    <FormGroup text=\"username\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={username}\n                            onChange={onChangeUsername}\n                            validations={[required, vUsername]} //tells if the username is right with more than 3 and less than 20\n                        />\n                    </FormGroup>\n                    <FormGroup text=\"email\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"email\"\n                            value={email}\n                            onChange={onChangeEmail}\n                            validations={[required, vEmail]} //validates email\n                        />\n                    </FormGroup>\n\n                    <FormGroup text=\"password\">\n                        <Input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required, vPassword]} // password has to be longer than 6 and less than 40 characters\n                        />\n                    </FormGroup>\n\n                    <ButtonSpinner text=\"Sign Up\" />\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}